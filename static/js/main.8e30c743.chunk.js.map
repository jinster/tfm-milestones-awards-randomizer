{"version":3,"sources":["components/AwardMilestone.jsx","App.js","registerServiceWorker.js","index.js"],"names":["AwardMilestone","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bigTitle","event","setState","react_default","a","createElement","className","style","background","onClick","onToggle","bind","key","idx","name","description","React","Component","shuffle","array","temp","i","length","j","Math","floor","random","findHighestConflictScore","arr","newHighScore","_","forEach","val1","val2","data","synergies","check","document","getElementById","checked","MainMenu","whichScreen","id","type","buttonClick","milestonesArr","Array","fill","map","x","awardsArr","highestConflictScore","tempMiles","toConsumableArray","tempAwards","slice","concat","sortBy","console","log","generateMilestonesAndAwards","isVenus","d","components_AwardMilestone","names","backgroundColor","App","randomizeButton","currentScreen","screen","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8e30c743.chunk.js","sourcesContent":["import React from 'react';\n\nclass AwardMilestone extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { bigTitle: true };\n  }\n  \n  onToggle(event) {\n    this.setState({\n      bigTitle: !this.state.bigTitle\n    });\n  }\n\n  render() {\n    const props = this.props;\n    return (\n      <div className=\"am-item\" >\n        {this.state.bigTitle\n        ? <div className=\"award-milestone\" style={{background: props.style}} onClick={this.onToggle.bind(this)} key={props.idx} ><h3>{props.name}</h3></div> \n        : <div className=\"award-milestone-secondary\" onClick={this.onToggle.bind(this)} key={props.idx + 999}><p className=\"title\">{props.name} </p><div className=\"description\">{props.description}</div>\n        </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default AwardMilestone;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport AwardMilestone from './components/AwardMilestone';\nimport data from './data.json';\nimport _ from 'lodash';\n\nfunction shuffle(array) {\n  var i = array.length,\n      j = 0,\n      temp;\n\n  while (i--) {\n      j = Math.floor(Math.random() * (i+1));\n      temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n\n  }\n\n  return array;\n}\n\nfunction findHighestConflictScore(arr) {\n  let newHighScore = 0;\n  _.forEach(arr, function(val1) {\n    _.forEach(arr, function(val2) {\n      if (data.synergies[val1][val2] > newHighScore) {\n        newHighScore = data.synergies[val1][val2];\n      }\n    })\n  })\n  return newHighScore;\n}\n\nfunction generateMilestonesAndAwards() {\n\n  const milestonesArr = Array(check() ? 16 : 15).fill().map((x,i)=>i);\n  const awardsArr =  Array(check() ? 16 : 15).fill().map((x,i)=>i + 16);\n\n  let highestConflictScore = 99;\n  let array = [];\n\n  while (highestConflictScore >= 5) {\n    array = [];\n    let tempMiles = [...milestonesArr];\n    let tempAwards = [...awardsArr];\n  \n    tempMiles = shuffle(tempMiles).slice(0, check() ? 6 : 5);\n    tempAwards = shuffle(tempAwards).slice(0, check() ? 6 : 5);\n  \n    array = _.concat(tempMiles, tempAwards);\n    array = _.sortBy(array);\n  \n    highestConflictScore = findHighestConflictScore(array);\n  }\n\n  console.log(highestConflictScore);\n  console.log(array);\n  return array;\n}\n\n\nfunction check() {\n  return (document.getElementById(\"includeVenus\").checked);\n}\n\nfunction MainMenu(props) {\n  var milestones = [];\n  var awards = []\n  if (props.whichScreen === 'mainMenu') {\n    return (\n      <div className=\"App-main-menu\">\n        <div className=\"App-header\">\n         <h1 className=\"App-title\">\n           Terraforming Mars\n         </h1>\n         <h3>\n           Milestone and Awards Randomizer\n         </h3>\n        </div>\n\n        <div className=\"App-button\">\n          <div className=\"wrapper\">\n            <p>Include Venus Next?</p>\n            <label className=\"switch\">\n              <input id=\"includeVenus\" type=\"checkbox\" />\n              <span className=\"slider\"></span>\n            </label>\n          </div>\n          <div className=\"wrapper\">\n            <p>Prevent high conflict synergies?</p>\n            <label className=\"switch\">\n              <input id=\"preventSynergies\" type=\"checkbox\" checked/>\n              <span className=\"slider\"></span>\n            </label>\n          </div>\n          <div className=\"wrapper\">\n            <button onClick={props.buttonClick}>Randomize!</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  else if (props.whichScreen === 'randomizeScreen') {\n    const array = generateMilestonesAndAwards();\n    const isVenus = check() ? 6 : 5;\n    return (\n      <div className=\"randomize-screen\">\n        <h2>Milestones</h2>\n        <div className=\"am-list\">\n          {array.map(function(d, idx){\n            if (idx >= isVenus) {\n              return;\n            }\n            return (\n              <AwardMilestone\n                name={data.names[d]}\n                description={data.description[d]}\n                style={data.backgroundColor[d]}\n                key={idx}\n              />\n            )\n          })}\n        </div>\n        <h2>Awards</h2>\n        <div className=\"am-list\">\n          {array.map(function(d, idx){\n              if (idx < isVenus) {\n                return;\n              }\n              return (\n                <AwardMilestone\n                  name={data.names[d]}\n                  description={data.description[d]}\n                  style={data.backgroundColor[d]}\n                  key={idx}\n                />\n              )\n          })}\n        </div>\n      </div>\n    );\n  }\n  else return(null);\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentScreen: 'mainMenu'\n    }\n  }\n\n  randomizeButton = () => {\n\n    this.setState({\n      currentScreen: 'randomizeScreen'\n    });\n  }\n\n  render() {\n    const screen = this.state.currentScreen;\n    return (\n      <div className=\"App\">\n        <MainMenu\n          whichScreen={screen}\n          buttonClick={this.randomizeButton}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}